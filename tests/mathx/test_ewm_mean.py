import datetime
import polars as pl
from polars.testing import assert_frame_equal
import polars_ts as ts  # noqa
import pytest


@pytest.fixture
def df() -> pl.LazyFrame:
    t = datetime.datetime(2024, 1, 1, 0).date()
    nrows = 16
    result = pl.LazyFrame(
        [
            pl.Series(
                "time",
                [
                    t + datetime.timedelta(days=days + 1)
                    for days in range(0, nrows * 2, 2)
                ],
            ),
            pl.Series(
                "item",
                ["A"] * (nrows // 2) + ["B"] * (nrows // 2),
                dtype=pl.Categorical,
            ),
            pl.Series("val1", list(range(0, nrows)), dtype=pl.Float64),
            pl.Series("val2", list(range(0, nrows)), dtype=pl.Float64) * 100.0,
        ]
    )

    return result


@pytest.fixture
def params() -> pl.LazyFrame:
    result = pl.LazyFrame(
        [
            pl.Series("test_case", ["1", "2", "3", "4", "5"], dtype=pl.Categorical),
            pl.Series("item", ["A", "A", "B", "B", "B"]),
            pl.Series("window_size", [1, 10, 1, 10, 50]),
            pl.Series("adjust", [True, True, False, False, False]),
        ]
    ).with_columns(
        alpha=1 / pl.col("window_size"),
        window_size=pl.col("window_size").cast(pl.String).cast(pl.Categorical),
    )

    return result


def test_basic(df, params):
    result = df.mathx.ewm_mean(params=params).collect()
    # print(result.to_init_repr())

    expected_result = pl.DataFrame(
        [
            pl.Series(
                "time",
                [
                    datetime.date(2024, 1, 2),
                    datetime.date(2024, 1, 2),
                    datetime.date(2024, 1, 2),
                    datetime.date(2024, 1, 2),
                    datetime.date(2024, 1, 2),
                    datetime.date(2024, 1, 4),
                    datetime.date(2024, 1, 4),
                    datetime.date(2024, 1, 4),
                    datetime.date(2024, 1, 4),
                    datetime.date(2024, 1, 4),
                    datetime.date(2024, 1, 6),
                    datetime.date(2024, 1, 6),
                    datetime.date(2024, 1, 6),
                    datetime.date(2024, 1, 6),
                    datetime.date(2024, 1, 6),
                    datetime.date(2024, 1, 8),
                    datetime.date(2024, 1, 8),
                    datetime.date(2024, 1, 8),
                    datetime.date(2024, 1, 8),
                    datetime.date(2024, 1, 8),
                    datetime.date(2024, 1, 10),
                    datetime.date(2024, 1, 10),
                    datetime.date(2024, 1, 10),
                    datetime.date(2024, 1, 10),
                    datetime.date(2024, 1, 10),
                    datetime.date(2024, 1, 12),
                    datetime.date(2024, 1, 12),
                    datetime.date(2024, 1, 12),
                    datetime.date(2024, 1, 12),
                    datetime.date(2024, 1, 12),
                    datetime.date(2024, 1, 14),
                    datetime.date(2024, 1, 14),
                    datetime.date(2024, 1, 14),
                    datetime.date(2024, 1, 14),
                    datetime.date(2024, 1, 14),
                    datetime.date(2024, 1, 16),
                    datetime.date(2024, 1, 16),
                    datetime.date(2024, 1, 16),
                    datetime.date(2024, 1, 16),
                    datetime.date(2024, 1, 16),
                    datetime.date(2024, 1, 18),
                    datetime.date(2024, 1, 18),
                    datetime.date(2024, 1, 18),
                    datetime.date(2024, 1, 18),
                    datetime.date(2024, 1, 18),
                    datetime.date(2024, 1, 20),
                    datetime.date(2024, 1, 20),
                    datetime.date(2024, 1, 20),
                    datetime.date(2024, 1, 20),
                    datetime.date(2024, 1, 20),
                    datetime.date(2024, 1, 22),
                    datetime.date(2024, 1, 22),
                    datetime.date(2024, 1, 22),
                    datetime.date(2024, 1, 22),
                    datetime.date(2024, 1, 22),
                    datetime.date(2024, 1, 24),
                    datetime.date(2024, 1, 24),
                    datetime.date(2024, 1, 24),
                    datetime.date(2024, 1, 24),
                    datetime.date(2024, 1, 24),
                    datetime.date(2024, 1, 26),
                    datetime.date(2024, 1, 26),
                    datetime.date(2024, 1, 26),
                    datetime.date(2024, 1, 26),
                    datetime.date(2024, 1, 26),
                    datetime.date(2024, 1, 28),
                    datetime.date(2024, 1, 28),
                    datetime.date(2024, 1, 28),
                    datetime.date(2024, 1, 28),
                    datetime.date(2024, 1, 28),
                    datetime.date(2024, 1, 30),
                    datetime.date(2024, 1, 30),
                    datetime.date(2024, 1, 30),
                    datetime.date(2024, 1, 30),
                    datetime.date(2024, 1, 30),
                    datetime.date(2024, 2, 1),
                    datetime.date(2024, 2, 1),
                    datetime.date(2024, 2, 1),
                    datetime.date(2024, 2, 1),
                    datetime.date(2024, 2, 1),
                ],
                dtype=pl.Date,
            ),
            pl.Series(
                "item",
                [
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "A",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                    "B",
                ],
                dtype=pl.Categorical(ordering="physical"),
            ),
            pl.Series(
                "val1",
                [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.5263157894736842,
                    1.0,
                    0.1,
                    0.02,
                    2.0,
                    1.070110701107011,
                    2.0,
                    0.29000000000000004,
                    0.0596,
                    3.0,
                    1.6312881651642916,
                    3.0,
                    0.5610000000000002,
                    0.118408,
                    4.0,
                    2.2097140484969837,
                    4.0,
                    0.9049000000000001,
                    0.19603984,
                    5.0,
                    2.805217699371904,
                    5.0,
                    1.31441,
                    0.2921190432,
                    6.0,
                    3.417593263294774,
                    6.0,
                    1.7829690000000002,
                    0.40627666233599996,
                    7.0,
                    4.046601250122929,
                    7.0,
                    2.3046721000000003,
                    0.53815112908928,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    9.0,
                    8.526315789473685,
                    9.0,
                    8.1,
                    8.02,
                    10.0,
                    9.070110701107012,
                    10.0,
                    8.29,
                    8.0596,
                    11.0,
                    9.631288165164293,
                    11.0,
                    8.561,
                    8.118408,
                    12.0,
                    10.209714048496984,
                    12.0,
                    8.904900000000001,
                    8.196039840000001,
                    13.0,
                    10.805217699371903,
                    13.0,
                    9.314410000000002,
                    8.292119043200001,
                    14.0,
                    11.417593263294775,
                    14.0,
                    9.782969000000003,
                    8.406276662336001,
                    15.0,
                    12.04660125012293,
                    15.0,
                    10.304672100000003,
                    8.538151129089282,
                ],
                dtype=pl.Float64,
            ),
            pl.Series(
                "val2",
                [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    100.0,
                    52.631578947368425,
                    100.0,
                    10.0,
                    2.0,
                    200.0,
                    107.01107011070111,
                    200.0,
                    29.0,
                    5.96,
                    300.0,
                    163.1288165164292,
                    300.0,
                    56.1,
                    11.8408,
                    400.0,
                    220.9714048496984,
                    400.0,
                    90.49000000000001,
                    19.603983999999997,
                    500.0,
                    280.52176993719036,
                    500.0,
                    131.44100000000003,
                    29.211904319999995,
                    600.0,
                    341.7593263294774,
                    600.0,
                    178.29690000000005,
                    40.627666233599996,
                    700.0,
                    404.6601250122929,
                    700.0,
                    230.46721000000005,
                    53.81511290892799,
                    800.0,
                    800.0,
                    800.0,
                    800.0,
                    800.0,
                    900.0,
                    852.6315789473684,
                    900.0,
                    810.0,
                    802.0,
                    1000.0,
                    907.0110701107011,
                    1000.0,
                    829.0,
                    805.96,
                    1100.0,
                    963.1288165164291,
                    1100.0,
                    856.1,
                    811.8408000000001,
                    1200.0,
                    1020.9714048496982,
                    1200.0,
                    890.49,
                    819.6039840000001,
                    1300.0,
                    1080.5217699371901,
                    1300.0,
                    931.441,
                    829.21190432,
                    1400.0,
                    1141.7593263294773,
                    1400.0,
                    978.2969,
                    840.6276662336,
                    1500.0,
                    1204.6601250122928,
                    1500.0,
                    1030.46721,
                    853.8151129089281,
                ],
                dtype=pl.Float64,
            ),
            pl.Series(
                "test_case",
                [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                ],
                dtype=pl.Categorical(ordering="physical"),
            ),
            pl.Series(
                "window_size",
                [
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                    "1",
                    "10",
                    "1",
                    "10",
                    "50",
                ],
                dtype=pl.Categorical(ordering="physical"),
            ),
        ]
    ).select(result.columns)

    assert_frame_equal(result, expected_result)
